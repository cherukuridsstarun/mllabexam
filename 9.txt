import pandas as pd
import numpy as np
import sklearn
from sklearn import datasets


iris = datasets.load_iris()
X = iris.data
Y = iris.target

Splitting the Dataset:
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)

Building the AdaBoost Model:
from sklearn.ensemble import AdaBoostClassifier
adb = AdaBoostClassifier()
model = adb.fit(X_train, Y_train)
y_pred = model.predict(X_test)
y_pred

Evaluating the Model
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score
print(confusion_matrix(Y_test, y_pred))
print(classification_report(Y_test, y_pred))
print(accuracy_score(Y_test, y_pred))

from sklearn.svm import SVC
from sklearn.ensemble import AdaBoostClassifier
svc = SVC(probability = True, kernel='linear')
adb = AdaBoostClassifier(n_estimators=100,base_estimator = svc, learning_rate= 0.01)

Training and Predicting the AdaBoost Classifier
model = adb.fit(X_train, Y_train)
y_pred = model.predict(X_test)
y_pred

print(confusion_matrix(Y_test, y_pred))
print(classification_report(Y_test, y_pred))
print(accuracy_score(Y_test, y_pred))

Output:
[[16  0  0]
 [ 0 15  1]
 [ 0  0 13]]
              precision    recall  f1-score   support

           0       1.00      1.00      1.00        16
           1       1.00      0.94      0.97        16
           2       0.93      1.00      0.96        13

    accuracy                           0.98        45
   macro avg       0.98      0.98      0.98        45
weighted avg       0.98      0.98      0.98        45

0.9777777777777777