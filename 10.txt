from sklearn.datasets import fetch_openml
mnist = fetch_openml('mnist_784', version=1, as_frame=False)
X = mnist.data
y = mnist.target
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=50000, random_state=42)
X_test, X_val, y_test, y_val = train_test_split(X_test, y_test, train_size=10000, random_state=42)
from sklearn.metrics import accuracy_score
from sklearn.ensemble import RandomForestClassifier
rnd_clf = RandomForestClassifier(n_estimators=500, max_leaf_nodes=32, random_state=42)
rnd_clf.fit(X_train, y_train)
y_val_pred = rnd_clf.predict(X_val)
accuracy_score(y_val, y_val_pred)
0.8694
from sklearn.ensemble import ExtraTreesClassifier
ext_clf = ExtraTreesClassifier(n_estimators=500, max_leaf_nodes=32, random_state=42)
ext_clf.fit(X_train, y_train)
y_val_pred = ext_clf.predict(X_val)
accuracy_score(y_val, y_val_pred)
0.8596
from sklearn.svm import LinearSVC
svm_clf = LinearSVC(max_iter=100, tol=20, random_state=42)
svm_clf.fit(X_train, y_train)
y_val_pred = svm_clf.predict(X_val)
accuracy_score(y_val, y_val_pred)
0.8777
from sklearn.ensemble import VotingClassifier
voting_clf = VotingClassifier(
estimators=[('rf', rnd_clf), ('et', ext_clf), ('svc', svm_clf)]
)
voting_clf.fit(X_train, y_train)
voting_clf.score(X_val, y_val)
0.8771
voting_clf.score(X_test, y_test)
0.8751